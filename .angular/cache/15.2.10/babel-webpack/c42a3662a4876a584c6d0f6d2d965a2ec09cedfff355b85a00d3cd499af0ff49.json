{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./firebase.service\";\nimport * as i2 from \"./auth.service\";\nexport let PortfolioService = /*#__PURE__*/(() => {\n  class PortfolioService {\n    constructor(firebase, authService) {\n      this.firebase = firebase;\n      this.authService = authService;\n      this.baseUrl = 'https://hown-stock-default-rtdb.firebaseio.com/';\n    }\n    /** 取得所有投資標的 */\n    getPortfolios() {\n      return this.firebase.getApi(this.baseUrl + this.authService.userId + '/portfolios.json', 'getPortfolios').pipe(map(res => {\n        const postsArray = [];\n        for (const key in res) {\n          if (res.hasOwnProperty(key)) {\n            postsArray.push({\n              ...res[key],\n              id: key\n            });\n          }\n        }\n        return postsArray;\n      }));\n    }\n    /** 更新投資標的 */\n    updatePortfolio(id, req) {\n      return this.firebase.updateApi(this.baseUrl + this.authService.userId + `/portfolios/${id}.json`, req, 'updatePortFolio');\n    }\n    /** 更新所有投資標的 */\n    updatePortfolios(req) {\n      return this.firebase.updateApi(this.baseUrl + this.authService.userId + `/portfolios.json`, req, 'updatePortFolios');\n    }\n    /** 刪除指定投資標的 */\n    deletePortfolio(id) {\n      return this.firebase.deleteApi(this.baseUrl + this.authService.userId + `/portfolios/${id}.json`, 'deletePortFolio');\n    }\n    static #_ = this.ɵfac = function PortfolioService_Factory(t) {\n      return new (t || PortfolioService)(i0.ɵɵinject(i1.FirebaseService), i0.ɵɵinject(i2.AuthService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PortfolioService,\n      factory: PortfolioService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return PortfolioService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}